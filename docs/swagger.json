{"openapi":"3.0.0","info":{"title":"Next Swagger API Example","version":"1.0"},"servers":[{"url":"http://localhost:8080/api"}],"security":[{"BearerAuth":[]}],"components":{"securitySchemes":{"BearerAuth":{"type":"http","scheme":"bearer"}},"responses":{"InternalServerError":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}}},"Unauthorized":{"description":"Unauthorized","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}}},"example":{"message":"Unauthorized"}}}},"NotFound":{"description":"Resource not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/NotFound"}}}}},"schemas":{"ServiceInfo":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"imageURL":{"type":"string"},"actionCount":{"type":"number"},"reactionCount":{"type":"number"},"oauthId?":{"type":"string"}}},"AReaInfo":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"fields":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"type":{"type":"string"},"values?":{"type":"array","items":{"type":"string"}}}}}}}},"DetailedService":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"description":{"type":"string"},"imageURL":{"type":"string"},"actions":{"type":"array","items":{"$ref":"#/components/schemas/AReaInfo"},"reactions":{"type":"array","items":{"$ref":"#/components/schemas/AReaInfo"}}}}},"NotFound":{"type":"object","properties":{"message":{"type":"string"}}},"UserSession":{"type":"object","properties":{"id":{"type":"integer","description":"user id of the user attached to the session"},"token":{"type":"string"}},"example":{"id":1,"token":"your-uuid-token-here"}},"Error":{"type":"object","properties":{"error":{"type":"string"}}},"User":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"authType":{"type":"string"}}},"OauthInfo":{"type":"object","properties":{"id":{"type":"string"},"imageURL":{"type":"string"}},"required":["id","imageURL"]}}},"paths":{"/auth/{id}":{"get":{"summary":"Handle OAuth callback and exchange authorization code for access token","tags":["OAuth"],"parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"},"description":"The ID of the OAuth service (e.g., google, github, etc.)"},{"in":"query","name":"code","required":true,"schema":{"type":"string"},"description":"The authorization code returned from the OAuth provider"},{"in":"query","name":"state","required":true,"schema":{"type":"string"},"description":"The state parameter to verify the OAuth request"}],"responses":{"302":{"description":"Redirects to the originally requested URL after successful authentication","headers":{"Location":{"description":"The redirection URL","schema":{"type":"string","example":"https://example.com/callback"}}}},"400":{"description":"Bad request or missing/invalid parameters (e.g., code or state)","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Invalid code or state"}}}}}},"404":{"description":"OAuth service not found","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Service not found"}}}}}}}}},"/auth/generate/{id}":{"post":{"summary":"Initiate OAuth login flow","tags":["OAuth"],"parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"},"description":"The ID of the OAuth service (e.g., google, github, etc.)"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"redirectURL":{"type":"string","description":"The URL to redirect the user to after successful OAuth authentication","example":"https://example.com/callback"}}}}}},"security":[{"BearerAuth":[]}],"responses":{"200":{"description":"Returns the OAuth redirect URL","content":{"application/json":{"schema":{"type":"object","properties":{"url":{"type":"string","description":"The OAuth service authorization URL","example":"https://accounts.google.com/o/oauth2/v2/auth?..."}}}}}},"401":{"description":"Unauthorized, missing or invalid token","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Unauthorized"}}}}}},"404":{"description":"OAuth service not found","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","example":"Service not found"}}}}}}}}},"/auth/login/google":{"post":{"summary":"Get user info from google","tags":["Auth"],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"code":{"type":"string","description":"google Oauth code"}}}}}},"responses":{"200":{"description":"User is connected with google. Returns a session token.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSession"}}}},"201":{"description":"User is created and connected with google. Needs to update username before using the returned token.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSession"}}}},"400":{"description":"Bad request"}}}},"/auth/login":{"post":{"summary":"Login","tags":["Auth"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"email":{"type":"string"},"password":{"type":"string"}}}}}},"responses":{"200":{"description":"Returns a new session","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserSession"}}}},"404":{"description":"User not found","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string"}}}}}},"500":{"description":"Internal server error"}}}},"/auth/register":{"post":{"summary":"Create a new user","tags":["Auth"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string"},"password":{"type":"string"},"email":{"type":"string"}}}}}},"responses":{"200":{"description":"Returns the created user id and username","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer"},"username":{"type":"string"}}},"example":{"id":1,"username":"johnDoe"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"},"example":{"error":"Invalid email"}}}},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/oauth":{"get":{"description":"Get all oauth services","responses":{"200":{"description":"Returns all oauth services","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/OauthInfo"}}}}}}}},"/services/{id}":{"get":{"tags":["Services"],"summary":"Get service by id","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"},"description":"The ID of the service to retrieve"}],"responses":{"200":{"description":"Returns a service","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DetailedService"}}}}}}},"/services":{"get":{"summary":"Get all services","tags":["Services"],"responses":{"200":{"description":"Get all services","content":{"application/json":{"schema":{"type":"object","properties":{"services":{"type":"array","items":{"$ref":"#/components/schemas/ServiceInfo"}}}}}}}}},"post":{"tags":["Services"],"summary":"Executes an action and triggers a reaction.","description":"This endpoint allows you to execute a specified action and trigger a corresponding reaction based on the provided input.","requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"action":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the action to be executed."},"fields":{"type":"object","description":"The fields required by the action."}}},"reaction":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the reaction to be triggered."},"fields":{"type":"object","description":"The fields required by the reaction."}}}},"required":["action","reaction"]}}}},"responses":{"200":{"description":"Successfully executed action and triggered reaction.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"Success message."}}}}}},"404":{"description":"Action or reaction not found.","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string","description":"Error message when action or reaction is not found."}}}}}}}}},"/users/{id}":{"get":{"summary":"Get user by id","tags":["Users"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"Returns user by id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"}}},"put":{"summary":"Update user by id","tags":["Users"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string"},"email":{"type":"string"}}}}}},"responses":{"200":{"description":"Returns user updated","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}}},"example":{"message":"User updated"}}}},"400":{"description":"Validation error"},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/InternalServerError"}}},"delete":{"summary":"Delete user by id","tags":["Users"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"Returns user deleted","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"}}},"example":{"message":"User deleted"}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"404":{"$ref":"#/components/responses/NotFound"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/users/me":{"get":{"summary":"Get currently logged in user","tags":["Users"],"responses":{"200":{"description":"Returns the user associated with the session token","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"401":{"$ref":"#/components/responses/Unauthorized"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/users":{"get":{"summary":"Get all users","tags":["Users"],"responses":{"200":{"description":"Returns all users","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/User"}},"example":[{"id":1,"username":"johnDoe","email":"john.doe@acme.com"},{"id":2,"username":"janeDoe","email":"jane.doe@acme.com"}]}}},"500":{"$ref":"#/components/responses/InternalServerError"}}}}},"tags":[]}