volumes:
  db-data:
    driver: local
  shared-data:
    driver: local

name: area

networks:
  mobile-tier:
    driver: bridge
  web-tier:
    driver: bridge
  back-tier:
    driver: bridge

services:
  db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - back-tier
    env_file:
      - .env
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - back-tier

  ngrok:
    image: ngrok/ngrok:latest
    ports:
      - "4040:4040"
    networks:
      - back-tier
    command:
      - "http"
      - "http://client_web:8080"
    env_file:
      - .env

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    depends_on:
      - client_web
      - ngrok
      - redis
    networks:
      - back-tier
    env_file:
      - .env
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST: db
      REDIS_HOST: redis
      NGROK_HOST: ngrok
      WEB_HOST: client_web
  
  client_web:
    build:
      context: .
      dockerfile: web/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - client_mobile
    networks:
      - web-tier
      - back-tier
    env_file:
      - .env
    volumes:
      - shared-data:/app/web/public/
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_HOST: db
      REDIS_HOST: redis
      NGROK_HOST: ngrok
      WEB_HOST: client_web

  client_mobile:
    build:
      context: .
      dockerfile: mobile/Dockerfile
    volumes:
      - shared-data:/app/mobile/android/app/build/outputs/apk/release/
