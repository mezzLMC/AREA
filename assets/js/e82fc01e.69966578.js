"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2827],{7109:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"technical/7service_breakdown/6enrichments","title":"Enrichments","description":"Enrichments are used to simplify the passage of data from action to reaction using a variable interpolation system. They are used to replace variables in the data with their actual values. Enrichments let you use create more dynamic and content based reactions.","source":"@site/docs/technical/7service_breakdown/6enrichments.md","sourceDirName":"technical/7service_breakdown","slug":"/technical/7service_breakdown/6enrichments","permalink":"/AREA/docs/technical/7service_breakdown/6enrichments","draft":false,"unlisted":false,"editUrl":"https://github.com/EpitechPromo2027/B-DEV-500-STG-5-1-area-mohamed.mazouz/edit/main/docs/technical/7service_breakdown/6enrichments.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Fields","permalink":"/AREA/docs/technical/7service_breakdown/5fields"},"next":{"title":"User\'s Guide","permalink":"/AREA/docs/category/users-guide"}}');var s=t(4848),r=t(8453);const o={sidebar_position:6},a="Enrichments",c={},d=[{value:"Structure",id:"structure",level:2},{value:"Implementation on Action side",id:"implementation-on-action-side",level:2},{value:"Implementation on Reaction side",id:"implementation-on-reaction-side",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"enrichments",children:"Enrichments"})}),"\n",(0,s.jsx)(n.p,{children:"Enrichments are used to simplify the passage of data from action to reaction using a variable interpolation system. They are used to replace variables in the data with their actual values. Enrichments let you use create more dynamic and content based reactions."}),"\n",(0,s.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,s.jsx)(n.p,{children:"Each Field implements the following simple structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"export interface Enrichment {\n    id: string;\n    name: string;\n    description: string;\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"implementation-on-action-side",children:"Implementation on Action side"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"class SomeoneFollowedMe extends AreaAction {\n\n    description = 'Triggers when someone follows you'\n    name = 'Someone Followed Me'\n    id = 'someone_followed_me'\n    async generateFields(userId: number) {...}\n    async add(userId: number, _fields: Record<string, string>) {...}\n    static async getMe(accessToken: string) {...}\n    async setUpWebhook(action: Action) {...}\n    async setup(): Promise<void> {...}\n\n    enrichments = [\n        {\n            name: 'Twitch Follower ID',\n            description: 'The ID of the user who followed you',\n            id: 'TWITCH_FOLLOWER_ID'\n        },\n        {\n            name: 'Twitch Follower Username',\n            description: 'The username of the user who followed you',\n            id: 'TWITCH_FOLLOWER_USERNAME'\n        }\n    ]\n\n    async webhook(actionId: number, req: Request) {\n        const body = await req.json();\n        const userid = body.event.user_id as string;\n        const userLogin = body.event.user_login as string;\n\n        queue.push({\n            action: this.id,\n            id: actionId,\n            enrichments: {\n                TWITCH_FOLLOWER_ID: userid,\n                TWITCH_FOLLOWER_USERNAME: userLogin\n            }\n        });\n        return new Response(null, { status: 200 })\n    }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"The front-end and mobile app will retrieve the available variables and let the user use them in the reaction configuration."}),"\n",(0,s.jsx)("img",{src:"/img/choose_enrichment.jpeg",alt:"enrichments",width:"300",style:{marginBottom:10}}),"\n",(0,s.jsx)(n.h2,{id:"implementation-on-reaction-side",children:"Implementation on Reaction side"}),"\n",(0,s.jsx)(n.p,{children:"The service worker will then generate a function that will replace the variables with their actual values and pass it to the reaction when it is triggered."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"    const enrichedContent = {\n        content: 'User with ID {{TWITCH_FOLLOWER_ID}} and username {{TWITCH_FOLLOWER_USERNAME}} followed you',\n    }\n\n    const enriched = enrich(enrichedContent);\n    // enriched = {\n    //     content: 'User with ID 123456 and username user123 followed you'\n    //}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);