"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[146],{5042:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"technical/7service_breakdown/2service","title":"Service","description":"A Service is a third-party application that provides a set of functionalities that can be used to create automations. It can be based on a precise external application or tool such as a social network, a messaging platform, or a cloud service. Each service is composed of a set of actions and reactions that can be used to create automations.","source":"@site/docs/technical/7service_breakdown/2service.md","sourceDirName":"technical/7service_breakdown","slug":"/technical/7service_breakdown/2service","permalink":"/AREA/docs/technical/7service_breakdown/2service","draft":false,"unlisted":false,"editUrl":"https://github.com/EpitechPromo2027/B-DEV-500-STG-5-1-area-mohamed.mazouz/edit/main/docs/technical/7service_breakdown/2service.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"OAuth","permalink":"/AREA/docs/technical/7service_breakdown/1oauth"},"next":{"title":"Action","permalink":"/AREA/docs/technical/7service_breakdown/3action"}}');var s=n(4848),a=n(8453);const o={sidebar_position:2},r="Service",c={},l=[{value:"Structure",id:"structure",level:2},{value:"Implementation",id:"implementation",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"service",children:"Service"})}),"\n",(0,s.jsx)(t.p,{children:"A Service is a third-party application that provides a set of functionalities that can be used to create automations. It can be based on a precise external application or tool such as a social network, a messaging platform, or a cloud service. Each service is composed of a set of actions and reactions that can be used to create automations."}),"\n",(0,s.jsx)(t.h2,{id:"structure",children:"Structure"}),"\n",(0,s.jsx)(t.p,{children:"Each service implements the following structure:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"export interface Service {\n    // an unique identifier for the service, will be used to reference the service in the database and the API requests\n    id: string;\n    // a display name for the service that will be shown to the user\n    name: string;\n    // a short description of the service\n    description: string;\n    // an array of actions that the service provides\n    actions: Action[];\n    // an array of reactions that the service provides\n    reactions: Reaction[];\n    // a URL to an image representing the service\n    imageURL: string;\n    // an unique identifier for the service in the OAuth flow, force the end user to authenticate before using the service\n    oauthId?: string;\n    /* a function that will be called on server startup to initialize the service,\n       it can be used to clear webhooks, setup polling, etc. */\n    setup: () => Promise<void>;\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsx)(t.p,{children:"Here is an example of a service implementation:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:'\n// AreaService is an abstract base class that implements the Service interface.\n// It provides a default empty implementation for the setup method.\nclass TwitchService extends AreaService {\n\n    description = "Twitch is a live streaming platform for gamers and other lifestyle casters...";\n    id = "twitch";\n    name = "Twitch";\n    imageURL = "/images/twitch-purple.svg";\n    //setting the oauthId to "twitch" will set the login mandatory for the service\n    oauthId = "twitch";\n\n    //array of class instances extending AreAreaAction\n    actions = [\n        FollowedBroadcasterIsStreaming,\n        someoneFollowedMe,\n        someoneSubsToMe\n    ]\n\n    reactions = [\n        // no reactions for now\n    ];\n\n    static async deleteSubscription(id:string, accessToken: string) : Promise<void> {\n        const api = TwitchApiInstance(accessToken);\n        await api.eventSub.deleteEventSubSubscription({ id });;\n    }\n\n    //get all the running webhooks subscriptions and delete them\n    async setup() {\n        const accessToken = await getAppAccessToken();\n        const api = TwitchApiInstance(accessToken);\n        const eventSubs = await api.eventSub.getEventSubSubscriptions();\n        if (eventSubs.status !== 200) return;\n        const subs = eventSubs.data.data;\n        for (const sub of subs) {\n            await TwitchService.deleteSubscription(sub.id, accessToken); \n        }\n        console.log("Deleted all twitch webhooks");\n    }\n}\n\n// Exporting an instance of the service\nexport default new TwitchService();\n'})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const s={},a=i.createContext(s);function o(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);