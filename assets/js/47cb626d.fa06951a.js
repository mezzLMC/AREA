"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9345],{3014:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"technical/7service_breakdown/3action","title":"Action","description":"An Action is a specific event that can be detected using polling or webhooks. It can be based on a user interaction, a change in a specific state, or a specific event that can be detected by the service. Each action is composed of a set of parameters that can be used to configure the action and a function that will be called when the action is triggered.","source":"@site/docs/technical/7service_breakdown/3action.md","sourceDirName":"technical/7service_breakdown","slug":"/technical/7service_breakdown/3action","permalink":"/docs/technical/7service_breakdown/3action","draft":false,"unlisted":false,"editUrl":"https://github.com/EpitechPromo2027/B-DEV-500-STG-5-1-area-mohamed.mazouz/edit/main/docs/technical/7service_breakdown/3action.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Service","permalink":"/docs/technical/7service_breakdown/2service"},"next":{"title":"Reaction","permalink":"/docs/technical/7service_breakdown/4reaction"}}');var o=t(4848),a=t(8453);const s={sidebar_position:3},r="Action",c={},d=[{value:"Structure",id:"structure",level:2},{value:"Implementation",id:"implementation",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"action",children:"Action"})}),"\n",(0,o.jsx)(n.p,{children:"An Action is a specific event that can be detected using polling or webhooks. It can be based on a user interaction, a change in a specific state, or a specific event that can be detected by the service. Each action is composed of a set of parameters that can be used to configure the action and a function that will be called when the action is triggered."}),"\n",(0,o.jsx)(n.h2,{id:"structure",children:"Structure"}),"\n",(0,o.jsx)(n.p,{children:"Each Action implements the following structure:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"export interface Action {\n    // an unique identifier for the action, will be used to reference the action in the database and the API requests\n    id: string;\n    // a display name for the action that will be shown to the user\n    name: string;\n    // a short description of the action\n    description: string;\n    // an array of enrichments that will be filled on action trigger and passed to the reaction.\n    enrichments: Enrichment[];\n    // an array of fields that can be used to configure the action\n    generateFields: (userId: number) => Promise<Field[]>;\n    // a function that will be called when the action is triggered.\n    // it should finaly save the action in the database in a custom table and return the id of the action\n    add: (userId: number, fields: Record<string, string>) => Promise<number>;\n    // a function that will be called in an interval to check if the action is triggered\n    // it must finally push the action to the redis queue to trigger the linked reaction\n    poll: () => Promise<void>;\n    // a function that will be called at server startup to initialize the action\n    setup: () => Promise<void>;\n    // a function that will be called when the action is triggered by a webhook\n    // it must finally push the action to the redis queue to trigger the linked reaction\n    webhook: (id: number, req: Request) => Promise<Response>;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,o.jsx)(n.p,{children:"Here is an example of a service implementation:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"\nclass SomeoneFollowedMe extends AreaAction {\n    description = 'Triggers when someone follows you'\n    name = 'Someone Followed Me'\n    id = 'someone_followed_me'\n\n    enrichments = [\n        {\n            name: 'Twitch Follower ID',\n            description: 'The ID of the user who followed you',\n            id: 'TWITCH_FOLLOWER_ID'\n        },\n        {\n            name: 'Twitch Follower Username',\n            description: 'The username of the user who followed you',\n            id: 'TWITCH_FOLLOWER_USERNAME'\n        }\n    ]\n\n\n    static async getMe(accessToken: string) {\n        const api = TwitchApiInstance(accessToken)\n        const users = await api.users.getUsers()\n        if (users.status !== 200) return null\n        return users.data.data[0]\n    }\n\n    async setUpWebhook(action: Action) {\n        //retrieve the oauth token for the user\n        const oauth = await OAuthRepository.findByService('twitch', action.userId)\n        if (!oauth) return\n        const api = TwitchApiInstance(oauth.accessToken)\n        const me = await SomeoneFollowedMe.getMe(oauth.accessToken)\n\n        if (!me) return\n        const payload = {\n            broadcaster_user_id: me.id,\n            moderator_user_id: me.id\n        } as unknown as Record<string, never>\n\n        const accessToken = await getAppAccessToken()\n\n        //generate the webhook url using ngrok if in development mode that will redirect to the webhook function\n        const url = await createWebHookUrl('twitch', \"someone_followed_me\")\n\n        await api.eventSub.createEventSubSubscription(\n            {\n                transport: {\n                    method: 'webhook',\n                    callback: `${url}/${action.id}`,\n                    secret: crypto.randomBytes(16).toString('hex')\n                },\n                condition: payload,\n                type: 'channel.follow',\n                version: '2'\n            },\n            {\n                clientId: process.env.TWITCH_CLIENT_ID!,\n                accessToken\n            }\n        )\n    }\n\n    async generateFields(userId: number) {\n        return [] // no fields needed\n    }\n\n    // add the action to the database and set up the webhook\n    async add(userId: number, _fields: Record<string, string>) {\n        const db = await client()\n        const res = await db.insert(someoneFollowedMeModel).values({ userId }).returning().execute()\n        await db.$client.release()\n        this.setUpWebhook({ userId, id: res[0].id })\n        return res[0].id\n    }\n\n    //setup webhooks for all the existing actions\n    async setup(): Promise<void> {\n        const db = await client()\n        const triggers = await db.select().from(someoneFollowedMeModel).execute()\n        await db.$client.release()\n        await Promise.all(triggers.map(this.setUpWebhook))\n    }\n\n    async webhook(id: number, req: Request) {\n        const body = await req.json();\n\n        // if the request is a verification request, return the challenge\n        if (req.headers.get(\"Twitch-Eventsub-Message-Type\") === \"webhook_callback_verification\") {\n            const { challenge } = body;\n            return new Response(challenge, { status: 200, headers: { 'Content-Type': challenge.length.toString() } });\n        }\n\n        //retrieve the usefull data from the request\n        const userid = body.event.user_id as string;\n        const userLogin = body.event.user_login as string;\n\n        //push the action to the redis queue\n        queue.push({\n            action: this.id,\n            id,\n            enrichments: {\n                TWITCH_FOLLOWER_ID: userid,\n                TWITCH_FOLLOWER_USERNAME: userLogin\n            }\n        });\n        return new Response(null, { status: 200 })\n    }\n}\n\n//export an instance of the action\nexport default new SomeoneFollowedMe()\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);