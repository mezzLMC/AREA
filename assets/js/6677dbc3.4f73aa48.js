"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6769],{470:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"technical/6db","title":"Database Structure","description":"This project utilizes PostgreSQL as the database management system. It is integrated with NodeJS and Express to facilitate interactions between the front-end server and the API server.","source":"@site/docs/technical/6db.md","sourceDirName":"technical","slug":"/technical/6db","permalink":"/docs/technical/6db","draft":false,"unlisted":false,"editUrl":"https://github.com/EpitechPromo2027/B-DEV-500-STG-5-1-area-mohamed.mazouz/edit/main/docs/technical/6db.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Project Structure","permalink":"/docs/technical/4struct"},"next":{"title":"Services Breakdown","permalink":"/docs/category/services-breakdown"}}');var i=s(4848),r=s(8453);const c={sidebar_position:6},o="Database Structure",d={},l=[{value:"Models Overview",id:"models-overview",level:2},{value:"User Model",id:"user-model",level:3},{value:"AREA Model",id:"area-model",level:3},{value:"Action Schema",id:"action-schema",level:4},{value:"Reaction Schema",id:"reaction-schema",level:4},{value:"ConnectSession Model",id:"connectsession-model",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"database-structure",children:"Database Structure"})}),"\n",(0,i.jsx)(n.p,{children:"This project utilizes PostgreSQL as the database management system. It is integrated with NodeJS and Express to facilitate interactions between the front-end server and the API server."}),"\n",(0,i.jsx)(n.h2,{id:"models-overview",children:"Models Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The database contains several key models, including ",(0,i.jsx)(n.strong,{children:"User"}),", ",(0,i.jsx)(n.strong,{children:"AREA"}),", and ",(0,i.jsx)(n.strong,{children:"ConnectSession"}),". Each of these models is designed to store relevant data for the application."]}),"\n",(0,i.jsx)(n.h3,{id:"user-model",children:"User Model"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"User"})," model schema contains the following fields:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"email"}),": User's email address (type: ",(0,i.jsx)(n.code,{children:"VARCHAR"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"password"}),": Encrypted password for the user (type: ",(0,i.jsx)(n.code,{children:"VARCHAR"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"display_name"}),": Username of the user (type: ",(0,i.jsx)(n.code,{children:"VARCHAR"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"is_google_authed"}),": Indicates if the user is authenticated via Google (type: ",(0,i.jsx)(n.code,{children:"BOOLEAN"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"connect_data"}),": Data retrieved when the user connects to a service (type: ",(0,i.jsx)(n.code,{children:"JSON"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"area-model",children:"AREA Model"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"AREA"})," model is responsible for storing information about user actions and reactions. It includes the following fields:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"user_id"}),": Unique identifier for the user (type: ",(0,i.jsx)(n.code,{children:"UUID"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"action"}),": Details about the action performed (type: ",(0,i.jsx)(n.code,{children:"JSON"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"reaction"}),": Details about the reaction to the action (type: ",(0,i.jsx)(n.code,{children:"JSON"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"action-schema",children:"Action Schema"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Action"})," schema defines the structure of an action:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"service"}),": Name of the service related to the action (type: ",(0,i.jsx)(n.code,{children:"VARCHAR"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Name of the action (type: ",(0,i.jsx)(n.code,{children:"VARCHAR"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data field"}),": Additional information about the action (type: ",(0,i.jsx)(n.code,{children:"JSON"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"reaction-schema",children:"Reaction Schema"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Reaction"})," schema defines the structure of a reaction:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"service"}),": Name of the service related to the reaction (type: ",(0,i.jsx)(n.code,{children:"VARCHAR"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"name"}),": Name of the reaction (type: ",(0,i.jsx)(n.code,{children:"VARCHAR"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data field"}),": Additional information about the reaction (type: ",(0,i.jsx)(n.code,{children:"JSON"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"connectsession-model",children:"ConnectSession Model"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"ConnectSession"})," model is used to manage data when the user attempts to connect to a service. It includes:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"user_id"}),": Unique identifier for the user (type: ",(0,i.jsx)(n.code,{children:"UUID"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"endpoint"}),": The endpoint the user is accessing (type: ",(0,i.jsx)(n.code,{children:"VARCHAR"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data"}),": Data passed through endpoints and callbacks (type: ",(0,i.jsx)(n.code,{children:"JSON"}),")"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function c(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);